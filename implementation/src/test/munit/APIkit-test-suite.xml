<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<munit:config name="APIkit-test-suite.xml" />
	<munit:test name="GetAllHeroesTest" doc:id="87d666d8-f496-43b0-99a9-8b08731303c7" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Select from DB" doc:id="29248db5-24f2-4b44-a5ba-e4a0129e8006" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="All heroes" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="7cbc26e3-b6f5-426a-8295-b810f920eea1" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://mocks/All heroes.json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="GetHeroes" doc:id="1d071734-84cc-4141-ab0b-47feaa0fc65b" name="get:\heroes:kchalasiewicz-heroes-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Check response" doc:id="65f76d63-0092-46e9-a010-fd886f636329" actual="#[payload]" expected="#[readUrl('classpath://mocks/All heroes.json')]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="GetHeroWithNameTest" doc:id="201d83d3-129f-472a-96c5-7866edbd0d9e" >
		<munit:behavior>
			<munit-tools:mock-when doc:name="Select from DB" doc:id="b8f533f8-c7fa-47fe-8b77-9105b7f51609" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Hero with specific name" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="6cb69d95-b3ff-4d9f-9cb2-1793c0542f16" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://mocks/Hero.json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="queryParam name" doc:id="e4931221-e19c-4889-8b03-34d38fcde599" >
				<munit:attributes value='#[{&#10;	queryParams: {name: "Batman"}&#10;}]' />
				<munit:inbound-properties>
            		<munit:inbound-property key="http.uri.params" value="#[['name': 'Anu']]"/>
        		</munit:inbound-properties>
			</munit:set-event>
			<flow-ref doc:name="GetHeroes" doc:id="3bcadea0-0a58-48dd-bbf1-b136d1337fd4" name="get:\heroes:kchalasiewicz-heroes-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Check response" doc:id="f7ab2068-772f-4760-a63f-ad5c33f13c33" actual="#[payload]" expected="#[readUrl('classpath://mocks/Hero.json')]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="GetHeroWithMissingNameTest" doc:id="3e64fb50-0126-42ac-a75e-5f365450134f" expectedErrorType="APP:MISSING_HERO_NAME">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Select from DB" doc:id="44e12c1d-8013-4bfd-9a0c-47195063a45e" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Hero with specific name" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="6cb69d95-b3ff-4d9f-9cb2-1793c0542f16" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="queryParam name" doc:id="939653ff-300a-4328-9d10-d8ccceea84ba" >
				<munit:attributes value='#[{&#10;	queryParams: {name: "Hulk"}&#10;}]' />
			</munit:set-event>
			<flow-ref doc:name="GetHeroes" doc:id="932628a2-c03a-47ce-81d8-68d30528c2ff" name="get:\heroes:kchalasiewicz-heroes-config"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Check error message" doc:id="94eec4cf-00f9-4c78-b29f-19eb5b138bd1" actual="#[payload]" expected="#[{&#10;	message: &quot;Can't find a Hero with this name&quot;&#10;}]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="AddHeroTest" doc:id="2a2fa641-4228-4b34-82d1-90d8e9f77cf0" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Insert into DB" doc:id="5b3649cc-024f-41b2-b942-058073491f72" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Add hero" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="5c798f9c-e67b-47e6-a203-132bc961139f" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Post body" doc:id="e34f6630-526c-4903-b01e-5e7ad80abffc" >
				<munit:payload value="#[readUrl('classpath://mocks/New hero.json')]" />
			</munit:set-event>
			<flow-ref doc:name="PostHero" doc:id="91a35d72-e234-4178-97f6-140c3a4cb8df" name="post:\heroes:application\json:kchalasiewicz-heroes-config"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Check response" doc:id="924aa349-6d8a-4b72-aeea-279d72e56b3f" actual="#[payload]" expected='#[{&#10;  message: "Hero was created!"&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="AddHeroMissingFieldTest" doc:id="ae7975e6-303a-4e4f-8bca-2f0af3c9de22" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:execution >
			<munit:set-event doc:name="Post body" doc:id="cb02b9bf-07f5-497a-97d3-03d633fb9c79" >
				<munit:payload value="#[%dw 2.0&#10;output application/json&#10;---&#10;readUrl('classpath://mocks/New hero missing field.json')]" />
				<munit:attributes value='#[{&#10;	"headers": {&#10;    "content-type": "application/json"},&#10;  "method": "POST",&#10;  "scheme": "http",&#10;  "requestUri": "/api/heroes",&#10;  "version": "HTTP/1.1",&#10;  "listenerPath": "/api/*",&#10;  "localAddress": "",&#10;  "remoteAddress": "",&#10;  "relativePath": "/api/heroes",&#10;  "rawRequestUri": "/api/heroes",&#10;  "rawRequestPath": "/api/heroes",&#10;  "requestPath": "/api/heroes"&#10;} as Object {&#10;		class: "org.mule.extension.http.api.HttpRequestAttributes"&#10;	}]' />
			</munit:set-event>
			<flow-ref doc:name="Router" doc:id="b1ec5fac-eb05-4577-9a91-b9a046705e55" name="kchalasiewicz-heroes-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Check error message" doc:id="9b4634d0-aa6d-4cd8-b347-c250dfc45d2a" actual="#[payload]" expected='#[{message: "Incorrect Hero format"}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="GetHeroByIdTest" doc:id="8ad7ed09-a234-4750-b4af-9afb948129d4" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Select from DB" doc:id="4d341882-2929-4dfd-9246-18e40a3fb123" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Hero by id" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="64a0a21a-2289-4c49-9d2d-6c75a4f7117c" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://mocks/Hero.json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="uriParam id" doc:id="ae6f75b8-2b7b-48ee-9b09-631aefb8d2db" >
				<munit:attributes value="#[{&#10;	uriParams: {id:1} &#10;}]" />
			</munit:set-event>
			<flow-ref doc:name="GetHeroById" doc:id="b4976e8f-4096-42b0-9bb5-76b0517c3a4c" name="get:\heroes\(id):kchalasiewicz-heroes-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Check response" doc:id="0d762148-1fd9-48ce-903f-2473df2131ce" actual="#[payload]" expected="#[readUrl('classpath://mocks/Hero.json')]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="GetHeroByMissingIdTest" doc:id="5958fc14-6fd9-4695-8581-bc5c08646a81" expectedErrorType="APP:MISSING_HERO">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Select from DB" doc:id="b78f4088-6592-416b-aced-836289d3a653" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Hero by id" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="64a0a21a-2289-4c49-9d2d-6c75a4f7117c" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="uriParam id" doc:id="907e94c4-3997-49f9-a85a-241a99dd5987" >
				<munit:attributes value="#[{&#10;	uriParams: {id:1} &#10;}]" />
			</munit:set-event>
			<flow-ref doc:name="GetHeroById" doc:id="f5fa1ef6-6a60-4a60-8407-c07f3a758e43" name="get:\heroes\(id):kchalasiewicz-heroes-config" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Check error message" doc:id="32516318-2342-4644-b156-08d02845919b" actual="#[payload]" expected="#[{&#10;	message: &quot;Can't find a Hero with this id&quot;&#10;}]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="UpdateHeroTest" doc:id="9a45ac53-a583-4542-9dbf-043b68b642d1" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Select from DB" doc:id="5eaba893-9883-4899-8568-4722eabb54af" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Hero by id" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="33910ca3-d636-4931-8423-256a3a73306f" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://mocks/Hero.json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Update DB" doc:id="2cf13585-5e1d-414e-b2d6-310a9437ab57" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Hero by id" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="3ad537dc-d0aa-4ca8-9dd5-8886386354b7" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Put body and uriParam id" doc:id="43ec6d02-df44-4efa-ad42-d274fdd19086" >
				<munit:payload value="#[readUrl('classpath://mocks/New hero.json')]" />
				<munit:attributes value="#[{&#10;	uriParams: {id:1} &#10;}]" />
			</munit:set-event>
			<flow-ref doc:name="PutHero" doc:id="a4506b46-8a5a-4a47-8c65-136e3bdcb4e3" name="put:\heroes\(id):application\json:kchalasiewicz-heroes-config"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Check response" doc:id="f01237f9-bfd9-43c8-9748-c48d8cc19c8d" actual="#[payload]" expected='#[{&#10;  message: "Hero was updated!"&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="UpdateHeroMissingFieldTest" doc:id="413cdab1-0810-42d1-9d75-3f6046c6d86f" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:execution >
			<munit:set-event doc:name="Put body" doc:id="531390c3-f0a6-4b5b-8b97-7b15eb3c80d0" >
				<munit:payload value="#[%dw 2.0&#10;output application/json&#10;---&#10;readUrl('classpath://mocks/New hero missing field.json')]" />
				<munit:attributes value='#[{&#10;	"headers": {&#10;    "content-type": "application/json"},&#10;  "method": "PUT",&#10;  "scheme": "http",&#10;  "requestUri": "/api/heroes",&#10;  "version": "HTTP/1.1",&#10;  "listenerPath": "/api/*",&#10;  "localAddress": "",&#10;  "remoteAddress": "",&#10;  "relativePath": "/api/heroes/1",&#10;  "rawRequestUri": "/api/heroes/1",&#10;  "rawRequestPath": "/api/heroes/1",&#10;  "requestPath": "/api/heroes/1"&#10;} as Object {&#10;		class: "org.mule.extension.http.api.HttpRequestAttributes"&#10;	}]' />
			</munit:set-event>
			<flow-ref doc:name="Router" doc:id="bf6755fb-7f1f-40f7-8add-2a8ef915e601" name="kchalasiewicz-heroes-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Check error message" doc:id="67c4c2e6-5089-4465-b426-8e0b9227fdd4" actual="#[payload]" expected='#[{message: "Incorrect Hero format"}]' />
		</munit:validation>
	</munit:test>
	<munit:test name="DeleteHeroTest" doc:id="91052692-baaf-4404-9603-4c4227a59875" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Select from DB" doc:id="e15c4a9f-6f65-49b9-92ea-68b6c63f107b" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Hero by id" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="33910ca3-d636-4931-8423-256a3a73306f" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://mocks/Hero.json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Delete from DB" doc:id="e2402173-2216-4c08-8679-271115edec4e" processor="db:delete">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Hero by id" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="dc46c3e0-aa8a-45e5-83ba-7633681ac69a" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="uriParam id" doc:id="8270dd34-183a-4094-af44-b81b2c87e6aa" >
				<munit:attributes value="#[{&#10;	uriParams: {id:1} &#10;}]" />
			</munit:set-event>
			<flow-ref doc:name="DeleteHero" doc:id="dd4881ca-1e33-48a3-bb88-3c3901ab7937" name="delete:\heroes\(id):kchalasiewicz-heroes-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Check response" doc:id="72a30e4a-4088-4eb2-a4e6-6bba8c5fecfa" actual="#[payload]" expected='#[{&#10;  message: "Hero was deleted :("&#10;}]'/>
		</munit:validation>
	</munit:test>


</mule>
